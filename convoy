#!/bin/bash
# Convoy Panel Manager - Final Version by Rohit (TECH RDX)

CYAN="\033[0;36m"
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
RED="\033[1;31m"
NC="\033[0m"

convoy_dir="/var/www/convoy"

banner() {
clear
echo -e "${CYAN}"
echo "╔══════════════════════════════════════╗"
echo "║      🚀 TECH RDX - CONVOY PANEL      ║"
echo "╚══════════════════════════════════════╝"
echo "        Powered by Inkbyte Studios     "
echo -e "${NC}"
}

loading() {
  echo -ne "${YELLOW}Starting Installer "
  spin='⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏'
  for i in {1..20}; do
    i=$((i % 10))
    printf "\b${spin:$i:1}"
    sleep 0.15
  done
  echo -e " ${GREEN}Ready!${NC}"
  sleep 1
}

menu() {
  clear
  echo -e "${CYAN}======================================="
  echo "         Convoy Panel Manager"
  echo -e "=======================================${NC}"
  echo -e "${YELLOW}1) Install Convoy Panel${NC}"
  echo -e "${YELLOW}2) Uninstall Convoy Panel${NC}"
  echo -e "${YELLOW}3) Update Convoy Panel${NC}"
  echo -e "${YELLOW}4) Backup Convoy Panel${NC}"
  echo -e "${YELLOW}5) Start Panel${NC}"
  echo -e "${YELLOW}6) Stop Panel${NC}"
  echo -e "${YELLOW}7) Check Status${NC}"
  echo -e "${YELLOW}8) Exit${NC}"
  echo
  read -p "Choose an option [1-8]: " choice
}

install_panel() {
  echo -e "${GREEN}Installing Convoy Panel...${NC}"
  apt update -y && apt upgrade -y
  curl -fsSL https://get.docker.com/ | sh
  apt install -y docker-compose-plugin curl unzip git nano

  mkdir -p $convoy_dir && cd $convoy_dir || exit
  curl -Lo panel.tar.gz https://github.com/convoypanel/panel/releases/latest/download/panel.tar.gz
  tar -xzf panel.tar.gz && rm -f panel.tar.gz

  chmod -R o+w storage/ bootstrap/cache/
  [ ! -f ".env" ] && cp .env.example .env

  echo -e "${CYAN}✔ Convoy installed.${NC}"
  echo -e "${YELLOW}Next steps:${NC}"
  echo "   cd $convoy_dir"
  echo "   nano .env   (edit DB & settings)"
  echo "   docker compose up -d"
  echo "   docker compose exec workspace composer install --no-dev --optimize-autoloader"
  echo "   docker compose exec workspace php artisan key:generate --force"
  echo "   docker compose exec workspace php artisan migrate --force"
  echo "   docker compose exec workspace php artisan c:user:make"
}

uninstall_panel() {
  echo -e "${RED}Uninstalling Convoy Panel...${NC}"
  if [ -d "$convoy_dir" ]; then
    cd $convoy_dir || exit
    docker compose down || true
    cd ..
    rm -rf $convoy_dir
    echo -e "${GREEN}✔ Convoy Panel removed.${NC}"
  else
    echo -e "${RED}Convoy not installed.${NC}"
  fi
}

update_panel() {
  echo -e "${YELLOW}Updating Convoy Panel...${NC}"
  if [ -d "$convoy_dir" ]; then
    cd $convoy_dir || exit
    curl -Lo panel.tar.gz https://github.com/convoypanel/panel/releases/latest/download/panel.tar.gz
    tar --overwrite -xzf panel.tar.gz || tar -xzf panel.tar.gz
    rm -f panel.tar.gz
    docker compose down && docker compose up -d --build
    echo -e "${GREEN}✔ Update complete.${NC}"
  else
    echo -e "${RED}Convoy not installed.${NC}"
  fi
}

backup_panel() {
  echo -e "${CYAN}Creating backup...${NC}"
  if [ -d "$convoy_dir" ]; then
    tar -czf convoy-backup-$(date +%F).tar.gz $convoy_dir
    echo -e "${GREEN}✔ Backup saved as convoy-backup-$(date +%F).tar.gz${NC}"
  else
    echo -e "${RED}Convoy not installed.${NC}"
  fi
}

start_panel() {
  [ -d "$convoy_dir" ] && cd $convoy_dir && docker compose up -d && \
  echo -e "${GREEN}✔ Convoy Panel started.${NC}" || echo -e "${RED}Not installed.${NC}"
}

stop_panel() {
  [ -d "$convoy_dir" ] && cd $convoy_dir && docker compose down && \
  echo -e "${RED}✔ Convoy Panel stopped.${NC}" || echo -e "${RED}Not installed.${NC}"
}

status_panel() {
  [ -d "$convoy_dir" ] && docker ps || echo -e "${RED}Convoy not installed.${NC}"
}

# Run
banner
loading
while true; do
  menu
  case $choice in
    1) install_panel ;;
    2) uninstall_panel ;;
    3) update_panel ;;
    4) backup_panel ;;
    5) start_panel ;;
    6) stop_panel ;;
    7) status_panel ;;
    8) echo -e "${RED}Exiting...${NC}"; exit 0 ;;
    *) echo -e "${RED}Invalid option!${NC}"; sleep 2 ;;
  esac
done
